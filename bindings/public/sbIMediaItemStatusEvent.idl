/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

interface sbIMediaItem;

/*
Event: MediaItemStatusEvent

A <MediaItemStatusEvent> is passed to any event handlers listening for
media item status related events fired on the document object.

Note that the <Songbird> object must be accessed before any events will be
raised. This will likely change in the future.

Example:
  (start code)
  function onDownloadComplete( aEvent ) {
    // we can get the downloaded media item
    alert(aEvent.item.guid);

    // as well as the download status
    alert(aEvent.status);
  }
  
  // initialize the event system
  songbird;
  
  // attach the event handler
  document.addEventListener("downloadcomplete", onDownloadComplete, false);
  (end code)

  See Also:
    <MediaItem>
    <http://developer.mozilla.org/en/docs/DOM:event>
    <http://developer.mozilla.org/en/docs/DOM:element.addEventListener>
*/

/**
 * \interface sbIMediaItemStatusEvent
 * \brief an interface to maintain information about the last event that
 *        occurred
 */
[scriptable, uuid(0140514d-50d5-4f0b-8445-c1f18846ca3a)]
 interface sbIMediaItemStatusEvent : nsISupports
{
  /*
  Prop: item

  The <MediaItem> corresponding to the event.

  Type: <MediaItem>
  */
  readonly attribute sbIMediaItem item;

  /*
  Prop: status

  The status of the event as an nsresult value.  A status of NS_OK indicates
  success.

  Type: <long>
  */
  readonly attribute long status;
};
