/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2009 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"
#include "sbIJobProgress.idl"


//
// @brief This interface is used for registering generic tasks that need to
//        be run at shutdown time. 
// 
//        To register with the shutdown service, simply add a listener to 
//        the |nsIObserverService| for the topic "songbird-shutdown" and
//        a reference to an implementor of this interface. When application 
//        shutdown occurs, all observers for "songbird-shutdown" will be 
//        queued and processed synchronously.
//
[scriptable, uuid(838329AB-15E1-4FF2-8EB3-C2754C8781D4)]
interface sbIShutdownJob : sbIJobProgress 
{
  //
  // @brief Inform the caller whether or not the task needs to be run.
  //        This attribute gives the task the flexibility to cancel running
  //        a task on shutdown if nothing needs to be run.
  //
  readonly attribute boolean needsToRunTask;

  //
  // @brief At shutdown time, this function will be called to all the registered
  //        shutdown tasks. Shutdown will be temporarily haulted until 
  //        |onJobProgress()| has been called on the assigned job progress
  //        listeners (inherited in this class from sbIJobProgress)
  // @param aJobListener The listener to notify of the status of the task.
  //
  void startTask();
};

