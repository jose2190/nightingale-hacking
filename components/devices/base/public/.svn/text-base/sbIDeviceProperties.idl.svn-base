/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright© 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

interface nsIPropertyBag2;
interface nsIURI;
interface nsIVariant;

/**
 * \interface sbIDeviceIdentification
 * \brief [UNIMPLEMENTED UNTIL AFTER 0.3]
 * \note Implementations of this interface must be threadsafe.
 */
[scriptable, uuid(80ff297c-1dd2-11b2-bc33-972b6bfe5167)]
interface sbIDeviceProperties : nsISupports
{
 /**
  * \brief Initialize Friendly Name property from a device
  */
  void initFriendlyName(in AString aFriendlyName);

 /**
  * \brief Initialize Default Name property from a device
  */
  void initDefaultName(in AString aDefaultName);

 /**
  * \brief Initialize Vendor Name propery for a device
  */
  void initVendorName(in AString aVendorName);

 /**
  * \brief Initialize Model Number propery for a device
  */
  void initModelNumber(in nsIVariant aModelNumber);

 /**
  * \brief Initialize Serial Number propery for a device
  */
  void initSerialNumber(in nsIVariant aSerialNumber);

 /**
  * \brief Initialize Firmware Version property for a device
  */
  void initFirmwareVersion(in AString aFirmwareVersion);

 /**
  * \brief Initialize Device Location for a device
  */
  void initDeviceLocation(in nsIURI aDeviceLocationUri);

 /**
  * \brief Initialize propery for a device
  */
  void initDeviceIcon(in nsIURI aDeviceIconUri);

 /**
  * \brief Initialize Device Properties for a device
  */
  void initDeviceProperties(in nsIPropertyBag2 aProperties);

  /**
   * \brief Indicates that the initialization is complete, the initilize
   *        functions above will no longer affect the data.
   */
  void initDone();


  /**
   * A human readable name. Not included in the hash code and therefore
   * optional. This name can be written to by the user and should be reflected
   * back to the device.
   */
  attribute AString friendlyName;

  /**
   * Default name for the device. Not included in the hash code and therefore
   * optional.
   */
  readonly attribute AString defaultName;

   /**
   * A string identifying the vendor of a device. Included in the hash code.
   */
  readonly attribute AString vendorName;
  
  /**
   * Model number for the device. Can be set in any appropriate format, but
   * will be converted to a string and included in the hash code.
   */
  readonly attribute nsIVariant modelNumber;
  
  /**
   * Serial number for the device. Can be set in any appropriate format, but
   * will be converted to a string and included in the hash code.
   */
  readonly attribute nsIVariant serialNumber;
  
  /**
   * Firmware version for the device. In human readable format. 
   * \note Optional, may be empty.
   */
  readonly attribute AString firmwareVersion;

  /**
   * A URI representing the location of the device. Not included in the hash
   * code and therefore optional.
   */
  readonly attribute nsIURI uri;
  
  /**
   * The preferred icon to be displayed to the user.
   * The user may be able to specify a custom icon for the device in the future.
   */
  readonly attribute nsIURI iconUri;
  
  /** 
   * All of the properties available for a device. 
   * Should only contain objects that implement nsIProperty!
   */
  readonly attribute nsIPropertyBag2 properties;

  /**
   * Returns true if the device is supposed to be hidden to the user.
   */
  attribute boolean hidden;
};
