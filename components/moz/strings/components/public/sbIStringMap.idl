/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 :miv */
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2009 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

/**
 * Provides read-only access to a map of string values
 */
[scriptable, uuid(D5577E77-2FAC-4bc8-9483-6E24950A8D0A)]
interface sbIStringMap : nsISupports {
  /**
   * Returns the string value for key or a 'void' string if the key doesn't 
   * exist
   * \param The key of the value to return
   */
  AString get(in AString key);
};

/**
 * Provides write access to a map of string values
 */
[scriptable, uuid(D2A0C71C-0A51-4644-8E5A-68746FA88A50)]
interface sbIMutableStringMap : sbIStringMap {
  /**
   * Sets a given string value for a key value
   * \param key The key of the value being set
   * \param value The value of the key value pair being set
   */
  void set(in AString key, in AString value);
  /**
   * Clears out the collection
   */
  void clear();
};

//
// C++ defs.
//

%{C++
#define SB_STRINGMAP_CONTRACTID \
          "@songbirdnest.com/Songbird/sbstringmap;1"
%}C++