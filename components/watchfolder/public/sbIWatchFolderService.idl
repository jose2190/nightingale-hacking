/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

[scriptable, uuid(a33307c2-1dd1-11b2-ad85-c03a5b21f0a3)]
interface sbIWatchFolderService : nsISupports
{
  //
  // \brief Find out if the watch folder services are supported on 
  //        the current OS.
  // \return True if watch folder is supported, false if not.
  //
  readonly attribute boolean isSupported;

  //
  // \brief Find out if the watch folder services are currently running and
  //        actively updating the users library.
  // \return True if the watch folder is running, false if not.
  //
  readonly attribute boolean isRunning;

  /**
   * \brief Add a absolute file path to be ignored by the watch folder service.
   *        This path will be ignored until it is removed via a call to
   *        |removeIgnorePath()|.  Each call to |addIgnorePath()| should be
   *        balanced by a call to |removeIgnorePath()|.
   *        When used in conjunction with |addIgnoreCount()|, the count will be
   *        decremented as normal when the path is ignored.  The path will
   *        continue to be ignored when the count reaches zero.
   * \param aFilePath The absolute path to start ignoring.
   */
  void addIgnorePath(in AString aFilePath);

  /**
   * \brief Remove an absolute file path from the ignored paths list of the
   *        watch folder service. All future events at the specified path
   *        will be processed by the watch folders service.
   *        When used in conjunction with |addIgnoreCount()|, any remaining
   *        events specified by the count will still be ignored.
   * \param aFilePath The absolute path to stop ignoring.
   */
  void removeIgnorePath(in AString aFilePath);
  
  /**
   * \brief Add an absolute file path to be ignore by the watch folder service.
   *        This path will be ignored for the given number of events, which
   *        includes file addition, deletion, or change.
   *        When used in conjunction with |addIgnorePath()| and
   *        |removeIgnorPath()|, the counter will be decremented as events are
   *        ignored.  The path may continue to be ignored after the count
   *        reaches zero if any calls to |addIgnorePath()| are not balanced by
   *        calls to |removeIgnorePath()|.
   * \param aFilePath The absolute path to ignore.
   * \param aCount The number of times to ignore events for the given path.
   *               Passing in zero will have no effect.
   *               Passing in a negative number will decrement the previously
   *               recorded count.
   *               Attempts to decrement the count below zero will be silently
   *               clamped to zero.
   */
  void addIgnoreCount(in AString aFilePath, in long aCount);
};
