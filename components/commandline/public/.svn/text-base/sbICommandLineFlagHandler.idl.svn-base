/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**       
 * \file sbICommandLineFlagHandler.idl
 * \brief Songbird Commandline Flag Handler Interface file
 * This file contains the interface used by the commandline flag handlers, 
 * to receive commandline flags and notifications of new flags
 * coming from remote instances. Handlers registered last have priority
 * over handlers registered first.
 * \sa sbCommandLineFlagHandler.js
 */

#include "nsISupports.idl"

/**
 * \interface sbICommandLineFlagHandler sbICommandLineFlagHandler.h
 * \brief Songbird Command line flag handler Interface
 */

[scriptable, uuid(c17916d1-c2a1-47cb-ae87-2eb03c0760db)]
interface sbICommandLineFlagHandler : nsISupports
{
  /**
   * \brief Handle a command line flag 
   * \param aFlag The command line flag
   * \param aParam The parameter for the flag
   * \return Return true if the handler processed this item. Items that have
   *         not been processed are passed on to the next command line item
   *         handler
   */
  boolean handleFlag(in AString aFlag, in AString aParam);
};
