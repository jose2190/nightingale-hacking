/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

/**       
 * \file IWindowCloak.idl
 * \brief Window cloaking service interface file
 * This file contains the interface to the window cloaking service, used to
 * hide a xul window without closing it, and to unhide it at a later time.
 */

#include "nsISupports.idl"

interface nsIDOMWindow;

/**
 * \interface sbIWindowCloak IWindowCloak.h
 * \brief Window cloaking service interface
 * This is an interface to the window cloaking service, used to hide a xul
 * window without closing it, and to unhide it at a later time.
 */
[scriptable, uuid(749e0809-e4a7-4c88-abb2-39c1440f1a2d)]
interface sbIWindowCloak : nsISupports
{
  /**
   * \brief Cloak a window
   * This method cloaks a xul window without closing it
   * \param aDOMWindow The xul window to cloak
   * \sa uncloak
   */
  void cloak(in nsIDOMWindow aDOMWindow);

  /**
   * \brief Uncloak a window
   * This method uncloaks a xul window
   * \param aDOMWindow The xul window to uncloak
   * \sa cloak
   */
  void uncloak(in nsIDOMWindow aDOMWindow);

  /**
   * \brief Determines whether a window is cloaked
   * This method is used to figure out if a given window is cloaked
   * \param aDOMWindow The xul window to test
   * \sa cloak
   */
  PRBool isCloaked(in nsIDOMWindow aDOMWindow);
};
