/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILocalDatabaseTreeView.idl
 * \brief Definition of the sbILocalDatabaseTreeView interfaces
 */

#include "nsISupports.idl"

interface nsIStringEnumerator;
interface nsITreeColumn;

/**
 * \interface sbILocalDatabaseTreeView
 * \brief [USER CODE SHOULD NOT REFERENCE THIS CLASS]
 */
[scriptable, uuid(bc5e40f7-a042-4603-a4b4-10f7dafcc139)]
interface sbILocalDatabaseTreeView : nsISupports
{
  const unsigned long MOUSE_STATE_NONE  = 0;
  const unsigned long MOUSE_STATE_HOVER = 1;
  const unsigned long MOUSE_STATE_DOWN  = 2;

  void setSort(in AString aProperty, in boolean aDirection);

  void invalidateRowsByGuid(in AString aGuid);

  void setMouseState(in long aRow,
                     in nsITreeColumn aColumn,
                     in unsigned long aState);

  readonly attribute boolean selectionIsAll;
  nsIStringEnumerator getSelectedValues();
};

%{C++

// This notification is used to tell all local database treeviews to invalidate
// and repaint.
#define SB_INVALIDATE_ALL_TREEVIEWS_TOPIC "songbird-invalidate-all-treeviews"

%}

