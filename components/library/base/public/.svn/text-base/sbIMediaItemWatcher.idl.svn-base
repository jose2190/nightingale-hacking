/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 :miv */
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//
// Interface description for the media item watcher interface.
//
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

#include "nsISupports.idl"


/**
 * \interface sbIMediaItemWatcher
 * \brief Interface for the media item watcher.  The media item watcher may be
 *        used to watch for changes to a specific media item.  Instantiate as a
 *        component instance.
 *
 * "@songbirdnest.com/Songbird/Library/MediaItemWatcher;1"
 *
 * \sa sbIMediaItemListener
 */

interface sbIMediaItem;
interface sbIMediaItemListener;
interface sbIPropertyArray;

[scriptable, uuid(bac56d2b-0ea8-46b8-ac35-1051986fc3f4)]
interface sbIMediaItemWatcher : nsISupports
{
  /*XXXeps Should add watchSome to watch multiple media items. */

  /**
   * \brief Watch for changes to the media item specified by aMediaItem and call
   *        the listener specified by aListener when any changes occur.  If
   *        aPropertyIDs is specified, only watch for changes to the specified
   *        properties.
   *
   * \param aMediaItem          Media item to watch.
   * \param aListener           Listener to call when changes occur.
   * \param aPropertyIDs        List of properties for which to listen for
   *                            changes.
   */
  void watch(in sbIMediaItem                aMediaItem,
             in sbIMediaItemListener        aListener,
             [optional] in sbIPropertyArray aPropertyIDs);

  /**
   * \brief Cancel watcher.
   */
  void cancel();
};


//
// C++ defs.
//

%{C++
#define SONGBIRD_MEDIAITEMWATCHER_CONTRACTID \
          "@songbirdnest.com/Songbird/Library/MediaItemWatcher;1"
%}C++

