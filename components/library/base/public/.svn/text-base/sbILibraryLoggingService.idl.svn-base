/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILibraryLoggingService.idl
 * \sa sbILibraryDiffingService.idl, sbILibraryChangeset.idl, sbILibraryChangeset.idl
 */

#include "nsISupports.idl"

interface sbIMediaList;
interface sbILibraryChangeset;

/**
* \interface sbILibraryLoggingService.idl
* \brief Library and media list logging service.
*
* The library logging service enables to log changes
* that are made to a library or list. The changeset will
* include all information about each change that was
* made to the library or list. This includes 
* items being added, modified (properties) and removed.
*
* \sa sbILibraryDiffingService, sbILibraryChangeset
*/
[scriptable, uuid(a43e6de1-5d6a-484a-90e5-ebca7171fce4)]
interface sbILibraryLoggingService : nsISupports
{
  /**
   * Start logging changes to a library.
   *
   * If the consumer is null, the log may be consumed by all. 
   *
   * The same library or media list may be added to the logging service 
   * multiple times if the log consumer is not already registered. 
   *
   * The same consumer may be used for multiple library or media lists.
   *
   * \param aMediaList    The library or media list to log.
   * \param aLogConsumer  The consumer of the log.
   */
  void addLibrary(in sbIMediaList aMediaList,
                  in nsISupports aLogConsumer);

  /**
   * Stop logging changes to a library.
   * 
   * \param aLibrary      The library to stop logging.
   * \param aLogConsumer  The consumer of the log.
   */
  void removeLibrary(in sbIMediaList aMediaList,
                     in nsISupports aLogConsumer);

  /** 
   * Get the changeset for a library.
   * 
   * \param aMediaList    The library or media list.
   * \param aLogConsumer  The consumer of the log.
   * \param aPeekLog      Flag indicating whether the log will be consumed or peeked.
   */
  sbILibraryChangeset getChangesetForLibrary(in sbIMediaList aMediaList,
                                             in nsISupports aLogConsumer,
                                             in boolean aPeekLog);

  /**
   * Indicates if there is a changeset available for the library / log consumer pair.
   *
   * \param aMediaList   The library.
   * \param aLogConsumer The log consumer.
   */
  boolean hasChangesetForLibrary(in sbIMediaList aMediaList,
                                 in nsISupports aLogConsumer);
};
