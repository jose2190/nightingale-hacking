/*
 //
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

#include "nsISupports.idl"

interface sbIMediacore;
interface sbIMediacoreCapabilities;

[scriptable, uuid(20a5b0ee-1869-4717-bbe4-c5d9db37c6fa)]
interface sbIMediacoreFactory : nsISupports
{
  readonly attribute AString contractID;
  readonly attribute AString name;

  readonly attribute sbIMediacoreCapabilities capabilities;

  sbIMediacore create(in AString aInstanceName);
};

%{C++

#include <nsIComponentManager.h>
#include <nsICategoryManager.h>
#include <nsIGenericFactory.h>
#include <nsIServiceManager.h>

#include <nsCOMPtr.h>
#include <nsServiceManagerUtils.h>
#include <nsStringGlue.h>
#include <nsXPCOMCID.h>

class nsIFile;
struct nsModuleComponentInfo;

#define SB_MEDIACORE_FACTORY_CATEGORY "songbird-mediacore-factory"

/**
 * Put this in your module definition file. Give your class name. Then your
 * moduleInfo should look something like this:
 *
 *   NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(sbSampleMediacoreFactory, Init);
 *   SB_MEDIACORE_FACTORY_REGISTERSELF(sbSampleMediacoreFactory);
 *
 *   static nsModuleComponentInfo components[] =
 *   {
 *     {
 *       CLASSNAME, 
 *       CID,
 *       CONTRACTID,
 *       sbSampleMediacoreFactoryConstructor,
 *       sbSampleMediacoreFactoryRegisterSelf,
 *       sbSampleMediacoreFactoryUnregisterSelf
 *     }
 *   };
 *
 *   NS_IMPL_NSGETMODULE(SampleMediacoreFactory, components)
 */
#define SB_MEDIACORE_FACTORY_REGISTERSELF(_name)                               \
                                                                               \
  NS_METHOD _name##RegisterSelf(nsIComponentManager* aCompMgr,                 \
                                nsIFile* aPath,                                \
                                const char* registryLocation,                  \
                                const char* componentType,                     \
                                const nsModuleComponentInfo* info);            \
                                                                               \
  NS_METHOD _name##UnregisterSelf(nsIComponentManager* aCompMgr,               \
                                  nsIFile* aPath,                              \
                                  const char* registryLocation,                \
                                  const nsModuleComponentInfo* info)

/**
 * Stick this in your implementation file. Give your class name.
 */
#define SB_MEDIACORE_FACTORY_REGISTERSELF_IMPL(_name, _desc)                   \
                                                                               \
  NS_METHOD                                                                    \
  _name##RegisterSelf(nsIComponentManager* aCompMgr,                           \
                      nsIFile* aPath,                                          \
                      const char* registryLocation,                            \
                      const char* componentType,                               \
                      const nsModuleComponentInfo* info)                       \
  {                                                                            \
    nsresult rv;                                                               \
    nsCOMPtr<nsICategoryManager> catMan =                                      \
      do_GetService(NS_CATEGORYMANAGER_CONTRACTID, &rv);                       \
    NS_ENSURE_SUCCESS(rv, rv);                                                 \
    nsCAutoString prevEntry;                                                   \
    rv = catMan->AddCategoryEntry(SB_MEDIACORE_FACTORY_CATEGORY,               \
                                  _desc,                                       \
                                  info->mContractID,                           \
                                  PR_TRUE, PR_TRUE,                            \
                                  getter_Copies(prevEntry));                   \
    NS_ENSURE_SUCCESS(rv, rv);                                                 \
    NS_WARN_IF_FALSE(prevEntry.IsEmpty(),                                      \
                     "Another controller was registered with that id!");       \
    return NS_OK;                                                              \
  }                                                                            \
                                                                               \
  NS_METHOD                                                                    \
  _name##UnregisterSelf(nsIComponentManager* aCompMgr,                         \
                        nsIFile* aPath,                                        \
                        const char* registryLocation,                          \
                        const nsModuleComponentInfo* info)                     \
  {                                                                            \
    nsresult rv;                                                               \
    nsCOMPtr<nsICategoryManager> catMan =                                      \
      do_GetService(NS_CATEGORYMANAGER_CONTRACTID, &rv);                       \
    NS_ENSURE_SUCCESS(rv, rv);                                                 \
    rv = catMan->DeleteCategoryEntry(SB_MEDIACORE_FACTORY_CATEGORY,            \
                                     _desc,                                    \
                                     PR_TRUE);                                 \
    NS_ENSURE_SUCCESS(rv, rv);                                                 \
    return NS_OK;                                                              \
  }
%}
