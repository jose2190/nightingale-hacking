/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
*/

/**
* \file sbIMetadataManager.idl
* \brief The manager from which to request a metadata handler
* \sa sbIMetadataHandler.idl
*/
#include "nsISupports.idl"
#include "sbIMetadataHandler.idl"

/**
* \interface sbIMetadataManager sbIMetadataManager.h
* \brief The manager from which to request a metadata handler
*
* User code gives the manager an url to a piece of media.
*
* Manager returns a proper handler, or NULL if it can't find one.
*
* User code uses that sbIMetadataHandler to read/write metadata.
*
* \sa sbIMetadataHandler
*/
[scriptable, uuid(efc95036-85ab-48ad-a72b-aba654760669)]
interface sbIMetadataManager : nsISupports
{
  /**
  * \brief Request a metadata handler
  *
  * User code provides an url to a piece of media.
  *
  * This method returns a proper handler, or NULL if it can't find one.
  *
  * User code uses that sbIMetadataHandler to read/write metadata.
  *
  * \param aUrl The url from which to read/write metadata
  * \return The handler to use, or NULL.
  */
  sbIMetadataHandler getHandlerForMediaURL(in AString aUrl);

  /**
   * \brief Request the next metadata handler that can handle the item.
   * \param aHandler The previous handler that was used to attempt to read/write
   *                 metadata.
   * \param aUrl The url from which to read/write metadata
   * \return The handler to use, or NULL.
   */
  sbIMetadataHandler getNextHandlerForMediaURL(in sbIMetadataHandler aHandler, 
                                               in AString aUrl);
};