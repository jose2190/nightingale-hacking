/*
 *=BEGIN SONGBIRD GPL
 *
 * This file is part of the Songbird web player.
 *
 * Copyright(c) 2005-2009 POTI, Inc.
 * http://www.songbirdnest.com
 *
 * This file may be licensed under the terms of of the
 * GNU General Public License Version 2 (the ``GPL'').
 *
 * Software distributed under the License is distributed
 * on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the GPL for the specific language
 * governing rights and limitations.
 *
 * You should have received a copy of the GPL along with this
 * program. If not, go to http://www.gnu.org/licenses/gpl.html
 * or write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 *=END SONGBIRD GPL
 */

/**
  * \file sbIMetadataLookupProvider.idl
  * \brief A metadata lookup service provider
  * \sa sbICDTOC
  */
#include "nsISupports.idl"
#include "sbIMetadataLookupData.idl"

interface sbICDTOC;

/**
  * \interface sbIMetadataLookupProvider sbIMetadataLookupProvider.h
  * \brief A metadata lookup service provider
  */
[scriptable, uuid(6e85fb20-1dd2-11b2-a6ae-c297b88bb7ef)]
interface sbIMetadataLookupProvider : nsISupports
{
  /**
   * \brief The name this provider is identified by.  Used by the metadata
   * lookup manager's getProvider() method
   */
  readonly attribute AString name;

  /**
   * \brief Used in the CD Rip preference pane to display descriptive text
   * next to the provider drop down
   */
  readonly attribute AString description;

  /**
   * \brief Used during CD Lookup notification in the header to display
   * which service we're currently looking up data aginst.  This can be
   * null if no logo is provided.
   */
  readonly attribute AString logoURL;

  /*
   * \brief Currently unused.  This can be null if no URL is provided.
   */
  readonly attribute AString infoURL;

  /**
   * \brief A default weight that the sbIMetadataLookupManager uses to
   * determine which provider to use by default if the user hasn't specified
   * one.  0 is reserved for application bundled providers.  Lower values
   * have stronger weight.
   */
  readonly attribute unsigned long weight;

  /*
  ACString calculateIdFromTracks([array, size_is(numTracks)] in aTracks,
                     in unsigned long numTracks);
  ACString calculateIdFromAlbum(in sbIMetadataAlbumDetail aAlbum);

  sbIMetadataLookupJob queryId(in AUTF8String aID);
  sbIMetadataLookupJob submitID(in sbIMetadataAlbumDetail aAlbum);
  */

  /**
   * \brief Given a CD TOC (sbICDTOC), lookup the results for matching albums
   * from this provider.  Returns a metadata lookup job from which you can
   * get sbIMetadataAlbumDetail objects.  You must then call getAlbumDetail()
   * to fill out the exact detail information for each album (such as track
   * listings, etc.)
   * \return sbIMetadataLookupJob
   */
  sbIMetadataLookupJob queryDisc(in sbICDTOC aCDTOC);
  
  /**
   * \brief Get follow-up album detailed information such as track listing,
   * etc.
   * \return sbIMetadataLookupJob
   */
  sbIMetadataLookupJob getAlbumDetail(in sbIMetadataAlbumDetail aAlbum);
};
