/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

interface nsIMutableArray;
interface nsIDOMWindow;
interface sbIMediaList;
interface sbIMediaItem;


//
// @brief Callback listener interface for an import job.
//
[scriptable, uuid(7E0C19F8-64D4-418D-B7A6-B89EE92B7721)]
interface sbIRUIImportListener : nsISupports
{
  //
  // @brief Callback method when the import of URIs is complete.
  // @param aTargetMediaList The target media list.
  // @param aTotalImportCount The number of items that where imported
  // @param aTotalDupeCount The number of duplicates found
  // @param aTotalUnsupportedCount The number of unsupported items found
  // @param aTotalInserted The number of media items that where inserted into
  //        the target media list.
  // @param aOtherDrops Other items that were not imported.
  //
  void onImportComplete(in sbIMediaList aTargetMediaList,
                        in unsigned long aTotalImportCount,
                        in unsigned long aTotalDupeCount,
                        in unsigned long aTotalUnsupportedCount,
                        in unsigned long aTotalInserted,
                        in unsigned long aOtherDrops);

  //
  // @brief Callback method when the first media item has been inserted.
  // @param aTargetMediaList The target media list of the import
  // @param aTargetMediaItem The first inserted media item.
  //
  void onFirstMediaItem(in sbIMediaList aTargetMediaList,
                        in sbIMediaItem aTargetMediaItem);
};

//------------------------------------------------------------------------------

//
// @brief Import service to help assist with inputing several URIs into a
//        associated medialist. For callback information about the status
//        of the import, see |sbIRUIImportListener|.
//
[scriptable, uuid(F9BC0B02-C078-47A3-91C3-3F00EA0CF8A1)]
interface sbIURIImportService : nsISupports
{
  //
  // @brief Start a import of a URI array.
  // @param aURIArray The array of URIs to import into the medialist.
  // @param aDOMWindow The parent window to show progress off of.
  // @param aTargetMediaList The media list to insert the media items created
  //                         from the URI array into.
  // @param aTargetPosition The position to insert media items into at. This
  //                        value can be -1 if the position does not matter.
  // @param aImportListener The callback listener that implements 
  //                        |sbIURIImportListener|.
  //
  void importURIArray(in nsIMutableArray aURIArray,
                      in nsIDOMWindow aDOMWindow,
                      in sbIMediaList aTargetMediaList,
                      in long aTargetPosition,
                      in sbIRUIImportListener aImportListener);
};

