/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbIDndSourceTracker.idl
 * \brief Helper service for transferring internal objects using drag and drop
 */

#include "nsISupports.idl"

interface nsISupportsString;

/**
 * \interface sbIDndSourceTracker
 * \brief Helper service for transferring internal objects using drag and drop
 */
[scriptable, uuid(179b2ff4-c1be-45ed-ae28-c38c59b1d0ea)]
interface sbIDndSourceTracker : nsISupports
{
  /**
   * \brief Clears the data out of the source tracker
   */
  void reset();

  /**
   * \brief Registers an object with the source tracker.
   * \return A unique handle to the object
   */
  AString registerSource(in nsISupports aSource);

  /**
   * \brief Get an object from the source tracker
   * \param aHandle Handle of the object to get
   * \return The requested object with the given handle
   */
  nsISupports getSource(in AString aHandle);

  /**
   * \brief Get an object from the source tracker using a nsISupportsString
   *        for the handle
   * \param aSupportsString nsISupportsString containing the handle
   * \return The requested object with the given handle
   */
  nsISupports getSourceSupports(in nsISupportsString aSupportsString);

};

