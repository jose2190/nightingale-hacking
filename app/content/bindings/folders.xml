<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */
-->

<!DOCTYPE bindings SYSTEM "chrome://songbird/locale/songbird.dtd" >

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="folders">
  
    <content>
      <xul:sb-multi-drawer sbid="drawer" header="false" flex="1" xbl:inherits="maxvisibleitems">
        <xul:hbox class="watch-folders-item-box" align="center" flex="1">
          <xul:textbox drawer-prop-map="value=folder" class="watch-folders-textbox dialog_textbox" flex="1"/>
          <xul:button label="&window.browse;" sbid="browse"/>
          <xul:button label="-" class="watch-folders-minus" sbtype="remove-drawer-item"/>
          <xul:button label="+" class="watch-folders-plus" sbtype="add-drawer-item"/>
        </xul:hbox>
      </xul:sb-multi-drawer>
    </content>

    <implementation>

      <field name="drawer">document.getAnonymousElementByAttribute(this, 'sbid', 'drawer');</field>

      <method name="setFolders">
        <parameter name="folders"/>
        <body>
          this.drawer.setState(folders);
        </body>
      </method>
      
      <method name="getFolders">
        <body>
          return this.drawer.getState();
        </body>
      </method>
      
      <method name="newFolder">
        <body>
          this.drawer.addItem();
        </body>
      </method>

      <method name="doBrowse">
        <body>
          <![CDATA[
          var retval = "";
          try
          {
            const CONTRACTID_FILE_PICKER = "@mozilla.org/filepicker;1";
            var nsIFilePicker = Components.interfaces.nsIFilePicker;
            var fp = Components.classes[CONTRACTID_FILE_PICKER].createInstance(nsIFilePicker);
            fp.init( window, null, nsIFilePicker.modeGetFolder);
            var res = fp.show();
            if ( res == nsIFilePicker.returnOK )
            {
              retval = fp.file.path;
            }
          }
          catch ( err )
          {
            alert( "doBrowse - " + err );
          }
          return retval;
          ]]>
        </body>
      </method>

    </implementation>

    <handlers>
      <handler event="command">
        <![CDATA[
        if (event.originalTarget.getAttribute("sbid") == "browse") {
          var item = this.drawer.getItem(event.originalTarget);
          if (item) {
            var folderstr = this.doBrowse();
            if ( folderstr.length > 0 )
              this.drawer.setItemState(item, { folder: folderstr } );
          }
        }
        ]]>
      </handler>
    </handlers>
 
  </binding>

</bindings>
