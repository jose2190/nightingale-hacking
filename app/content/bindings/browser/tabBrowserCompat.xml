<?xml version="1.0"?>
<!-- vim: set sw=2 :-->
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is this file as it was released on March 28, 2001.
   -
   - The Initial Developer of the Original Code is
   - David Hyatt.
   - Portions created by the Initial Developer are Copyright (C) 2001
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   David Hyatt <hyatt@netscape.com> (Original Author of <tabbrowser>)
   -   Mike Connor <mconnor@steelgryphon.com>
   -   Peter Parente <parente@cs.unc.edu>
   -   Giorgio Maone <g.maone@informaction.com>
   -   Asaf Romano <mozilla.mano@sent.com>
   -   Seth Spitzer <sspitzer@mozilla.org>
   -   Simon BÃ¼nzli <zeniko@gmail.com>
   -   Michael Ventnor <ventnor.bugzilla@yahoo.com.au>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!--
   - This is a compatibility binding for tabbrowser
   - Do not use any of the things here, they are all DEPRECATED
  -->
<bindings
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="tabbrowser-compat" extends="chrome://songbird/content/bindings/browser/tabBrowser.xml#tabbrowser">
    <implementation>
      <!-- these are all forwards from the current browser,
           use tabbrowser.selectedBrowser.foo -->
      <property name="docShell"
                onget="return this.selectedBrowser.docShell"
                readonly="true"/>

      <property name="webNavigation"
                onget="return this.selectedBrowser.webNavigation"
                readonly="true"/>

      <property name="webBrowserFind"
                readonly="true"
                onget="return this.selectedBrowser.webBrowserFind"/>

      <property name="webProgress"
                readonly="true"
                onget="return this.selectedBrowser.webProgress"/>

      <property name="contentWindow"
                readonly="true"
                onget="return this.selectedBrowser.contentWindow"/>

      <property name="sessionHistory"
                onget="return this.selectedBrowser.sessionHistory;"
                readonly="true"/>

      <property name="markupDocumentViewer"
                onget="return this.selectedBrowser.markupDocumentViewer;"
                readonly="true"/>

      <property name="contentViewerEdit"
                onget="return this.selectedBrowser.contentViewerEdit;"
                readonly="true"/>

      <property name="contentViewerFile"
                onget="return this.selectedBrowser.contentViewerFile;"
                readonly="true"/>

      <property name="documentCharsetInfo"
                onget="return this.selectedBrowser.documentCharsetInfo;"
                readonly="true"/>

      <property name="contentDocument"
                onget="return this.selectedBrowser.contentDocument;"
                readonly="true"/>

      <property name="contentTitle"
                onget="return this.selectedBrowser.contentTitle;"
                readonly="true"/>

      <property name="contentPrincipal"
                onget="return this.selectedBrowser.contentPrincipal;"
                readonly="true"/>

      <property name="securityUI"
                onget="return this.selectedBrowser.securityUI;"
                readonly="true"/>
      
      <method name="setIcon">
        <!-- moved to <tab> -->
        <parameter name="aTab"/>
        <parameter name="aURI"/>
        <body>
          <![CDATA[
            return aTab.setIcon(aURI);
          ]]>
        </body>
      </method>

      <method name="updateIcon">
        <!-- moved to <tab> -->
        <parameter name="aTab"/>
        <body>
          <![CDATA[
            return aTab.updateIcon();
          ]]>
        </body>
      </method>

      <method name="shouldLoadFavIcon">
        <!-- moved to <tab> -->
        <parameter name="aURI"/>
        <body>
          <![CDATA[
            return (aURI && this.mPrefs.getBoolPref("browser.chrome.site_icons") &&
                    this.mPrefs.getBoolPref("browser.chrome.favicons") &&
                    ("schemeIs" in aURI) && (aURI.schemeIs("http") || aURI.schemeIs("https")));
          ]]>
        </body>
      </method>

      <method name="useDefaultIcon">
        <!-- moved to <tab> -->
        <parameter name="aTab"/>
        <body>
          <![CDATA[
            Components.utils.reportError("call on tab!\n" + (new Error).stack);
            return aTab.useDefaultIcon();
          ]]>
        </body>
      </method>
    </implementation>
  </binding>
</bindings>
