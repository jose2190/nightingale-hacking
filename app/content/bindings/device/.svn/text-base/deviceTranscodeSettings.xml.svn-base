<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 *=BEGIN SONGBIRD GPL
 *
 * This file is part of the Songbird web player.
 *
 * Copyright(c) 2005-2010 POTI, Inc.
 * http://www.songbirdnest.com
 *
 * This file may be licensed under the terms of of the
 * GNU General Public License Version 2 (the ``GPL'').
 *
 * Software distributed under the License is distributed
 * on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the GPL for the specific language
 * governing rights and limitations.
 *
 * You should have received a copy of the GPL along with this
 * program. If not, go to http://www.gnu.org/licenses/gpl.html
 * or write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 *=END SONGBIRD GPL
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window [
  <!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
  <!ENTITY % songbirdDTD SYSTEM "chrome://songbird/locale/songbird.dtd">
  %brandDTD;
  %songbirdDTD;
]>

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * Device transcode settings widget.
   *
   *   This widget stores transcode settings for device sync and cd-rip
   * operations.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-device-transcode-settings">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>
      <xul:vbox sbid="transcoding-mode-details">
        <xul:vbox>
          <xul:label value="&device.settings.music.transcoding.format.label;"/>
          <xul:hbox align="center">
            <xul:menulist sbid="encoding-format-menu"
                          oncommand="onProfileUpdated(event);">
              <xul:menupopup sbid="encoding-format-list" class="encoding-format-list"/>
            </xul:menulist>
          </xul:hbox>
        </xul:vbox>
        <xul:vbox sbid="transcoding-bitrate" xbl:inherits="disabled">
          <xul:label value="&device.settings.music.transcoding.bitrate.label;"/>
          <xul:hbox align="center">
            <xul:menulist sbid="transcoding-bitrate-kbps"
                          oncommand="onBitrateUpdated(event);"
                          increment="16">
              <xul:menupopup sbid="transcoding-bitrate-list" />
            </xul:menulist>
            <xul:label value="&device.settings.music.transcoding.bitrate.units;"/>
          </xul:hbox>
          <xul:label sbid="transcoding-quality-desc"
                     value="&cdrip.prefpane.quality_desc;" />
        </xul:vbox>
      </xul:vbox>
    </content>

    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->
    <implementation>

      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
        /* Import external services. */
        this.importExternalServices(); 
        this.DTSW.initialize(this);
      ]]></constructor>


      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
        /* Finalize the device transcode settings services. */
        this.DTSW.finalize();
      ]]></destructor>


      <property name="showDesc"
                readonly="true"
                onget="return this.getAttribute('showDesc');" />

      <property name="disabled">
        <getter>
          return this.DTSW._disabled;
        </getter>
        <setter>
          this.DTSW._disabled = val;
          this.DTSW._update();
        </setter>
      </property>

      <property name="profiles">
        <getter>
          return this.DTSW._profiles;
        </getter>
        <setter>
          this.DTSW._rebuildProfiles(val);
        </setter>
      </property>

      <property name="transcodeProfileId">
        <getter>
          return this.DTSW._selectedProfile.id;
        </getter>
        <setter>
          this.DTSW._activateProfileById(val);
        </setter>
      </property>

      <property name="transcodeProfile">
        <getter>
          return this.DTSW._selectedProfile;
        </getter>
        <setter>
          this.DTSW._activateProfile(val);
        </setter>
      </property>

      <property name="transcodeBitrate">
        <getter>
          return this.DTSW._selectedBitrate;
        </getter>
        <setter>
          this.DTSW._selectedBitrate = val;
        </setter>
      </property>


      <!-- *********************************************************************
       *
       * Internal device transcode settings services.
       *
       ********************************************************************* -->

      <!--
       * importExternalServices
       *
       *   This function imports external services.
       -->

      <method name="importExternalServices"><body><![CDATA[
        /* Import the device transcode settings services. */
        if (typeof(this.DTSW) == "undefined") {
          /* Get the Javascript sub-script loader services. */
          var jsLoader = Components.classes["@mozilla.org/moz/jssubscript-loader;1"]
                                   .getService
                                       (Components.interfaces.mozIJSSubScriptLoader);

          jsLoader.loadSubScript
                 ("chrome://songbird/content/scripts/device/deviceTranscodeSettings.js",
                  this);
        }
      ]]></body></method>

      <!--
       * onProfileUpdated
       *
       *   Updates the selected profile from the UI.
       -->

      <method name="onProfileUpdated">
        <parameter name="aEvent"/>
        <body><![CDATA[
          this.transcodeProfileId = aEvent.target.value;
        ]]></body>
      </method>

      <!--
       * onBitrateUpdated
       *
       *   Updates the selected bitrate from the UI.
       -->

      <method name="onBitrateUpdated">
        <parameter name="aEvent"/>
        <body><![CDATA[
          this.transcodeBitrate = aEvent.target.value * 1000;
        ]]></body>
      </method>

    </implementation>

  </binding>
</bindings>
