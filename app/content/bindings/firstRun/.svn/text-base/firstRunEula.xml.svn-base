<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2009 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
<!ENTITY % songbirdDTD SYSTEM "chrome://songbird/locale/songbird.dtd">
%brandDTD;
%songbirdDTD;
]>

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * First run EULA widget.
   *
   *   This widget provides first run end user license agreement UI.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-first-run-eula"
           extends="chrome://songbird/content/bindings/wizard.xml#sb-wizard-page">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>

      <xul:vbox anonid="container_box" class="sb-first-run-eula-box">

        <xul:groupbox flex="1">
          <!-- Header. -->
          <xul:label class="sb-first-run-header"
                     value="&first_run.eula.header.label;"/>

          <!-- EULA browser. -->
          <xul:browser anonid="eula_browser"
                       class="sb-first-run-eula-browser"
                       type="content"
                       disablehistory="true"
                       src="chrome://songbird/content/html/eula.html"/>

          <!-- Accept EULA checkbox. -->
          <xul:checkbox anonid="accept_checkbox"
                        label="&first_run.eula.accept_checkbox.label;"
                        oncommand="_widgetSvc.doAcceptChanged();"/>
        </xul:groupbox>

        <!-- Language selection list. -->
        <xul:hbox class="sb-first-run-eula-language-box">
          <xul:label value="&first_run.eula.language.label;"/>
          <xul:menulist anonid="locale_menulist"
                        class="sb-first-run-eula-language-menulist"
                        onselect="_widgetSvc.localeDoSelect(event);">
            <xul:menupopup anonid="locale_menupopup"/>
          </xul:menulist>
        </xul:hbox>

        <!-- Options box. -->
        <xul:vbox anonid="options_box">

          <!-- Metrics collection checkbox. -->
          <xul:checkbox anonid="metrics_checkbox"
                        label="&first_run.feedback.metrics.label;"/>
          <xul:description class="indent sb-first-run-checkbox-description">
            &first_run.feedback.metrics.description;
          </xul:description>

        </xul:vbox> <!-- options_box -->

      </xul:vbox> <!-- container_box -->

      <xul:box anonid="button_attributes"
               xbl:inherits="hideback,showback,hidecancel,showcancel,hidenext,shownext,hidefinish,showfinish,showextra1,showextra2"/>
    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * Private fields.
       *
       *   _widgetSvc           First-run EULA widget services object.
       -->

      <field name="_widgetSvc"/>


      <field name="eulaBrowser">
        <![CDATA[
          document.getAnonymousElementByAttribute(
              this, 'anonid', 'eula_browser');
        ]]>
      </field>


      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
        // Import external services.
        this._importExternalServices();

        // Create a widget services object.
        this._widgetSvc = new firstRunEULASvc(this);

        // Initialize the widget services.
        this._widgetSvc.initialize();

        // set the default value of the metrics collection checkbox
        var metricsChecked =
          Application.prefs.getValue("app.metrics.checkedByDefault", true);
        var metricsCheckbox =
          document.getAnonymousElementByAttribute(this,
                                                  "anonid",
                                                  "metrics_checkbox");
        metricsCheckbox.checked = metricsChecked;
      ]]></constructor>


      <method name="saveSettings"><body><![CDATA[
        // Save the metrics collection setting.
        var metricsCheckbox =
              document.getAnonymousElementByAttribute(this,
                                                      "anonid",
                                                      "metrics_checkbox");
        var metricsEnabled = metricsCheckbox.checked ? "1" : "0";
        Application.prefs.setValue("app.metrics.enabled", metricsEnabled);
      ]]></body></method>

      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
        // Finalize the widget services.
        if (this._widgetSvc)
            this._widgetSvc.finalize();
      ]]></destructor>


      <!--
       * Import external services.
       -->

      <method name="_importExternalServices"><body><![CDATA[
        // Import the first-run EULA widget services.
        if (typeof(firstRunEULASvc) == "undefined") {
          var Cc = Components.classes;
          var Ci = Components.interfaces;
          var jsLoader = Cc["@mozilla.org/moz/jssubscript-loader;1"]
                           .getService(Ci.mozIJSSubScriptLoader);
          jsLoader.loadSubScript
            ("chrome://songbird/content/scripts/firstRun/firstRunEula.js",
             null);
        }
      ]]></body></method>

    </implementation>

    <handlers>
      <handler event="pageshow">
        // Set the quit button label.
       document.documentElement.getButton("extra1").label =
         SBString("first_run.quit");
      </handler>
    </handlers>

  </binding>

</bindings>

