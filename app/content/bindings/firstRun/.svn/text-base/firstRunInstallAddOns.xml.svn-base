<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
<!ENTITY % songbirdDTD SYSTEM "chrome://songbird/locale/songbird.dtd">
%brandDTD;
%songbirdDTD;
]>

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * First-run install add-ons widget.
   *
   *   This widget installs the set of selected first-run add-ons, providing an
   * installation status UI.  This widget reads the first-run add-ons bundle
   * from the element specified by the "addonsid" attribute.  The add-ons bundle
   * is read from the property with the name specified by the
   * "addonbundleproperty" attribute.
   *
   * Attributes:
   *
   *   addonsid                 ID of element with add-ons bundle.
   *   addonbundleproperty      Name of add-on bundle property of add-ons
   *                            element.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-first-run-install-add-ons">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>

      <xul:vbox anonid="widget_box"
                class="sb-first-run-install-add-ons-box"
                flex="1">

        <!-- Add-on bundle installer. -->
        <xul:sb-add-on-bundle-installer
          anonid="add_on_bundle_installer"
          class="sb-first-run-install-add-ons-installer"/>

      </xul:vbox>

    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * Private fields.
       *
       *   _widgetSvc           First-run install add-ons widget services
       *                        object.
       -->

      <field name="_widgetSvc"/>


      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
        // Import external services.
        this._importExternalServices();

        // Create a widget services object.
        this._widgetSvc = new firstRunInstallAddOnsSvc(this);

        // Initialize the widget services.
        this._widgetSvc.initialize();
      ]]></constructor>


      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
        // Finalize the widget services.
        if (this._widgetSvc)
            this._widgetSvc.finalize();
      ]]></destructor>


      <!--
       * Import external services.
       -->

      <method name="_importExternalServices"><body><![CDATA[
        // Import the install add-ons widget services.
        if (typeof(firstRunInstallAddOnsSvc) == "undefined") {
          var Cc = Components.classes;
          var Ci = Components.interfaces;
          var jsLoader = Cc["@mozilla.org/moz/jssubscript-loader;1"]
                           .getService(Ci.mozIJSSubScriptLoader);
          jsLoader.loadSubScript(  "chrome://songbird/content/scripts/" +
                                   "firstRun/firstRunInstallAddOns.js",
                                 null);
        }
      ]]></body></method>

    </implementation>

  </binding> <!-- sb-first-run-install-add-ons -->

</bindings>

