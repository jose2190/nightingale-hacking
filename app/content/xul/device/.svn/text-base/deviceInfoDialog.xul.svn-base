<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://songbird/skin/songbird.css" type="text/css"?>
<?xml-stylesheet href="chrome://songbird/content/bindings/bindings.css"
                 type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://songbird/locale/songbird.dtd">

<!-- Device info dialog box. -->
<dialog
 xmlns:html="http://www.w3.org/1999/xhtml"
 xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
 xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
 id="device_info_dialog"
 hidechrome="true"
 flex="1"
 type="songbird"
 buttons="accept"
 onload="DeviceInfoDlg.onLoad();"
 onunload="DeviceInfoDlg.onUnload();"
 ondialogaccept="onExit();"
>

  <!-- *************************************************************************
   *
   * Content.
   *
   ************************************************************************* -->

  <!-- Use Songbird window region. -->
  <windowregion/>

  <!-- Device info. -->
  <sb-device-info
    id="device_info"
    devicespecs="friendly_name,vendor,model,capacity,playback_formats,firmware_version"
    flex="1"/>


  <!-- *************************************************************************
   *
   * Implementation.
   *
   ************************************************************************* -->

  <!-- Import the Songbird services. -->  
  <script type="application/x-javascript"
          src="chrome://global/content/globalOverlay.js"/>
  <script type="application/x-javascript"
          src="chrome://songbird/content/scripts/windowUtils.js" />
  <script type="application/x-javascript"
          src="chrome://songbird/content/scripts/sbDataRemoteUtils.js" />

  <!-- Device info dialog services. -->
  <script><![CDATA[

    //
    // Defs.
    //

    if (typeof(Cc) == "undefined")
      var Cc = Components.classes;
    if (typeof(Ci) == "undefined")
      var Ci = Components.interfaces;
    if (typeof(Cr) == "undefined")
      var Cr = Components.results;


    //
    // Device info dialog services object.
    //

    var DeviceInfoDlg = {
      //
      // Object fields.
      //
      //   _device              sbIDevice object.
      //

      _device: null,


      //------------------------------------------------------------------------
      //
      // Public functions.
      //
      //------------------------------------------------------------------------

      /**
       * \brief Handle load events.
       */

      onLoad: function DeviceInfoDlg_onLoad() {
        // Get the dialog parameters.
        var dialogPB = window.arguments[0].QueryInterface
                                             (Ci.nsIDialogParamBlock);
        this._device = dialogPB.objects.queryElementAt(0, Ci.sbIDevice);

        // Get the device ID.
        var deviceID = this._device.id;

        // Listen for device events.
        var deviceManager = Cc["@songbirdnest.com/Songbird/DeviceManager;2"]
                              .getService(Ci.sbIDeviceManager2);
        deviceManager.addEventListener(this);

        // Set the device info element device ID.
        var deviceInfoElem = document.getElementById("device_info");
        deviceInfoElem.setAttribute("device-id", deviceID);

        // Construct the dialog title.
        var dialog = document.getElementById("device_info_dialog");
        var title = SBFormattedString("device.info.dialog.title",
                                      [ this._getDeviceFriendlyName() ]);

        // Set the dialog title.  Setting the title on the dialog widget from
        // onload does not result in the UI updating.  It must be done more
        // directly.
        var dialogTitlebar = document.getElementById("dialog-titlebar");
        dialogTitlebar.title = title;
      },


      /**
       * \brief Handle unload events.
       */

      onUnload: function DeviceInfoDlg_onUnload() {
        // Remove device event listener.
        var deviceManager = Cc["@songbirdnest.com/Songbird/DeviceManager;2"]
                              .getService(Ci.sbIDeviceManager2);
        deviceManager.removeEventListener(this);
      },


      //------------------------------------------------------------------------
      //
      // sbIDeviceEventListener functions.
      //
      //------------------------------------------------------------------------

      /**
       * \brief Handle the device event specified by aEvent.
       *
       * \param aEvent              Device event.
       */

      onDeviceEvent: function DeviceInfoDlg_onDeviceEvent(aEvent) {
        switch(aEvent.type) {
          case Ci.sbIDeviceEvent.EVENT_DEVICE_REMOVED :
            // Close dialog if device is removed.
            if (aEvent.data == this._device)
              window.close();
            break;

          default :
            break;
        }
      },


      //------------------------------------------------------------------------
      //
      // Internal functions.
      //
      //------------------------------------------------------------------------

      /**
       * \brief Return the device friendly name.
       *
       * \return Device friendly name.
       */

      _getDeviceFriendlyName: function DeviceInfoDlg__getDeviceFriendlyName() {
        try {
          return this._device.properties.friendlyName;
        } catch (err) {
          return SBString("device.info.unknown");
        }
      }
    };

  ]]></script>

</dialog>
