<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2009 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://global/content/commonDialog.css"
                 type="text/css"?>
<?xml-stylesheet href="chrome://songbird/skin/songbird.css" type="text/css"?>
<?xml-stylesheet href="chrome://songbird/content/bindings/bindings.css"
                 type="text/css"?>
<?xml-stylesheet href="chrome://songbird-dialogs/skin/podcastCreationDialog.css"
                 type="text/css"?>

<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
<!ENTITY % songbirdDTD SYSTEM "chrome://songbird/locale/songbird.dtd">
%brandDTD;
%songbirdDTD;
]>

<!-- ***************************************************************************
 *
 * Podcast creation dialog.
 *
 *   This dialog presents an interface for creating a new podcast.
 *
 *************************************************************************** -->


<!-- Device setup dialog box. -->
<dialog
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  id="podcast_creation_dialog"
  hidechrome="true"
  flex="1"
  type="songbird"
  title="&podcast.creation_dialog.title;"
  buttons="accept,cancel"
  ondialogaccept="if (podcastCreationDialog.onAccept()) onExit();">

  <!-- *************************************************************************
   *
   * Content.
   *
   ************************************************************************* -->

  <!-- Use Songbird window region. -->
  <windowregion/>

  <!-- Creation dialog container box. -->
  <vbox id="podcast_creation_container">

    <!-- URL textbox. -->
    <label value="&podcast.creation_dialog.url.heading;"/>
    <textbox id="podcast_url_textbox" multiline="true"/>

  </vbox>


  <!-- *************************************************************************
   *
   * Implementation.
   *
   ************************************************************************* -->

  <!-- Import the Songbird services. -->
  <script type="application/x-javascript"
          src="chrome://global/content/globalOverlay.js"/>
  <script type="application/x-javascript"
          src="chrome://songbird/content/scripts/windowUtils.js" />
  <script type="application/x-javascript"
          src="chrome://songbird/content/scripts/sbDataRemoteUtils.js" />

  <!-- Podcast creation dialog services. -->
  <script><![CDATA[
    //
    // Defs.
    //

    if (typeof(Cc) == "undefined")
      var Cc = Components.classes;
    if (typeof(Ci) == "undefined")
      var Ci = Components.interfaces;
    if (typeof(Cr) == "undefined")
      var Cr = Components.results;
    if (typeof(Cu) == "undefined")
      var Cu = Components.utils;


    // Songbird imports.
    Cu.import("resource://app/jsmodules/sbLibraryUtils.jsm");
    Cu.import("resource://app/jsmodules/StringUtils.jsm");
    Cu.import("resource://app/jsmodules/URLUtils.jsm");


    //
    // Podcast creation dialog services object.
    //

    var podcastCreationDialog = {
      /**
       * Handle dialog accept events.
       *
       * \return true if accepted.
       */

      onAccept: function podcastCreationDialog_onAccept() {
        // Get the podcast URL.
        var urlTextbox = document.getElementById("podcast_url_textbox");
        var podcastURLSpec = urlTextbox.value;
        var podcastURL = URLUtils.newURI(podcastURLSpec);
        if (!podcastURL) {
          var promptService = Cc["@mozilla.org/embedcomp/prompt-service;1"]
                                .getService(Ci.nsIPromptService);
          promptService.alert
                          (window,
                           SBString("podcast.invalid_url_alert.title"),
                           SBFormattedString("podcast.invalid_url_alert.msg",
                                             [ podcastURLSpec ]));
          return false;
        }

        // Create the podcast.
        var dynamicPlaylistService =
              Cc["@songbirdnest.com/Songbird/Library/DynamicPlaylistService;1"]
                .getService(Ci.sbIDynamicPlaylistService);
        var podcast = null;
        try {
          podcast = dynamicPlaylistService.createPodcast
                                             (LibraryUtils.mainLibrary,
                                              podcastURL);
        } catch (ex) {
          Cu.reportError(ex);
        }
        if (!podcast) {
          var promptService = Cc["@mozilla.org/embedcomp/prompt-service;1"]
                                .getService(Ci.nsIPromptService);
          promptService.alert
            (window,
             SBString("podcast.podcast_not_found_alert.title"),
             SBFormattedString("podcast.podcast_not_found_alert.msg",
                               [ podcastURL.spec ]));
          return false;
        }

        return true;
      }
    };

  ]]></script>

</dialog>

